all: tests

CC=xcrun cc
CXX=xcrun c++
	
TESTS = abort badsyscall crashread crashwrite crashexec divzero illegalinstruction nocrash  nullderef spin recursion stack_buffer_overflow malloc_abort fortify_source_overflow cfrelease_null uninit_heap recursive_write bad_func_call cpp_crash objc_crash invalid_address_64 read_and_write_instruction illegal_libdispatch fastMalloc variable_length_stack_buffer exploitable_jit null_objc_msgSend

TEST_DIR = .
TEST_BIN_DIR = ./bin

TEST_FLAGS=

tests: $(TESTS)
	mkdir -p $(TEST_BIN_DIR)
	mv $(TESTS) $(TEST_BIN_DIR)

abort: $(TEST_DIR)/abort.c
	$(CC) $(TEST_FLAGS) -o abort $(TEST_DIR)/abort.c
badsyscall: $(TEST_DIR)/badsyscall.c
	$(CC) $(TEST_FLAGS) -o badsyscall $(TEST_DIR)/badsyscall.c
crashread: $(TEST_DIR)/crashread.c
	$(CC) $(TEST_FLAGS) -o crashread $(TEST_DIR)/crashread.c
crashwrite: $(TEST_DIR)/crashwrite.c
	$(CC) $(TEST_FLAGS) -o crashwrite $(TEST_DIR)/crashwrite.c
crashexec: $(TEST_DIR)/crashexec.c
	$(CC) $(TEST_FLAGS) -o crashexec $(TEST_DIR)/crashexec.c
divzero: $(TEST_DIR)/divzero.c
	$(CC) $(TEST_FLAGS) -o divzero $(TEST_DIR)/divzero.c
illegalinstruction: $(TEST_DIR)/illegalinstruction.c
	$(CC) $(TEST_FLAGS) -o illegalinstruction $(TEST_DIR)/illegalinstruction.c
nullderef: $(TEST_DIR)/nullderef.c
	$(CC) $(TEST_FLAGS) -o nullderef $(TEST_DIR)/nullderef.c
nocrash: $(TEST_DIR)/nocrash.c
	$(CC) $(TEST_FLAGS) -o nocrash $(TEST_DIR)/nocrash.c
spin: $(TEST_DIR)/spin.c
	$(CC) $(TEST_FLAGS) -o spin $(TEST_DIR)/spin.c
recursion: $(TEST_DIR)/recursion.c
	$(CC) $(TEST_FLAGS) -o recursion $(TEST_DIR)/recursion.c
stack_buffer_overflow: $(TEST_DIR)/stack_buffer_overflow.c
	$(CC) $(TEST_FLAGS) -fstack-protector -D_FORTIFY_SOURCE=0 -o stack_buffer_overflow $(TEST_DIR)/stack_buffer_overflow.c
fortify_source_overflow: $(TEST_DIR)/stack_buffer_overflow.c
	$(CC) $(TEST_FLAGS) -D_FORTIFY_SOURCE=2 -fno-stack-protector -o fortify_source_overflow $(TEST_DIR)/stack_buffer_overflow.c
malloc_abort: $(TEST_DIR)/malloc_abort.c
	$(CC) $(TEST_FLAGS) -o malloc_abort $(TEST_DIR)/malloc_abort.c
cfrelease_null: $(TEST_DIR)/cfrelease_null.c
	$(CC) $(TEST_FLAGS)  -framework CoreFoundation -o cfrelease_null $(TEST_DIR)/cfrelease_null.c
uninit_heap: $(TEST_DIR)/uninit_heap.c
	$(CC) $(TEST_FLAGS) -o uninit_heap $(TEST_DIR)/uninit_heap.c
recursive_write: $(TEST_DIR)/recursive_write.c
	$(CC) $(TEST_FLAGS) -o recursive_write $(TEST_DIR)/recursive_write.c
bad_func_call: $(TEST_DIR)/bad_func_call.c
	$(CC) $(TEST_FLAGS) -o bad_func_call $(TEST_DIR)/bad_func_call.c
cpp_crash:  $(TEST_DIR)/cpp_crash.cpp
	$(CXX) $(TEST_FLAGS) -o cpp_crash $(TEST_DIR)/cpp_crash.cpp
objc_crash: $(TEST_DIR)/objc_crash.m
	$(CC) $(TEST_FLAGS) -o objc_crash -framework Foundation $(TEST_DIR)/objc_crash.m
invalid_address_64: $(TEST_DIR)/invalid_address_64.c
	$(CC) $(TEST_FLAGS) -o invalid_address_64 $(TEST_DIR)/invalid_address_64.c
read_and_write_instruction: $(TEST_DIR)/read_and_write_instruction.c
	$(CC) $(TEST_FLAGS) -o read_and_write_instruction $(TEST_DIR)/read_and_write_instruction.c
illegal_libdispatch:  $(TEST_DIR)/illegal_libdispatch.c
	$(CC) $(TEST_FLAGS) -o illegal_libdispatch $(TEST_DIR)/illegal_libdispatch.c
fastMalloc: $(TEST_DIR)/fastMalloc.cpp
	$(CXX) $(TEST_FLAGS) -o fastMalloc $(TEST_DIR)/fastMalloc.cpp
variable_length_stack_buffer: $(TEST_DIR)/variable_length_stack_buffer.c
	$(CC) $(TEST_FLAGS) -o variable_length_stack_buffer $(TEST_DIR)/variable_length_stack_buffer.c
exploitable_jit:  $(TEST_DIR)/exploitable_jit.c
	$(CC) $(TEST_FLAGS) -o exploitable_jit  $(TEST_DIR)/exploitable_jit.c
null_objc_msgSend: $(TEST_DIR)/null_objc_msgSend.c
	$(CC) $(TEST_FLAGS) -o null_objc_msgSend  $(TEST_DIR)/null_objc_msgSend.c

clean:
	- rm -rf $(TEST_BIN_DIR)
